@using BusinessLogic;
@using Domain;
@using Engine;
@inject Manager manager;
@inject NavigationManager NavigationManager; 
@page "/model";

<h3>Model</h3>

<InputText @bind-Value="name"/>
@if (!string.IsNullOrEmpty(nameError))
{
    <div class="alert alert-danger">@nameError</div>

}

<div>

<label for="Figures">Figuras</label>

<select class="form-control" id="Figures" @onchange="figureSelection">
    <option disabled selected value= "">Selecciona la figura</option>
    @foreach (var figure in manager.GetFigures())
    {
        <option value="@figure.name">@figure.name</option>
    }
</select>
</div>
<label for="Material">Materiales</label>
<select class="form-control" id="Material" @onchange="materialSelection">
    <option  disabled selected value="">Selecciona el material</option>
    @foreach(var material in manager.GetMaterials())
    {
        <option value="@material.name">@material.name</option>
    }
</select>

<p>Generar preview al guardar</p>
<InputCheckbox @bind-Value="@isChecked"/>

<button type="button" class="btn btn-primary" @onclick="CrearModelo">Guardar</button>
@if (!string.IsNullOrEmpty(mensajeError))
{
    <div class="alert alert-danger"> @mensajeError </div>
}

 @if (!string.IsNullOrEmpty(successMessage))
 {
    <div class="alert alert-success" role="alert">
        @successMessage
    </div>
 }





<button type="button" class="btn btn-primary" @onclick="VerModelo">Ver Modelos</button>




@code {
    private string name;
    private string nameError;
    private string mensajeError;
    private string selectedMaterial;
    private Material material;
    private string selectedFigure;
    private Figure figure;
    private bool isChecked = false;
    private string successMessage;

    Model model = new Model();

    void figureSelection(ChangeEventArgs e)
    {
        selectedFigure = e.Value.ToString();
        figure = manager.MatchingFigure(selectedFigure);
    }

    void materialSelection(ChangeEventArgs e)
    {
        selectedMaterial = e.Value.ToString();
        material = manager.MatchingMaterial(selectedMaterial);
    }

    void CrearModelo()
    {

        if (model.VerifyName(name))
        {
            model = new Model(name, figure, material);
            manager.addModel(model);
            successMessage= "Creación Exitosa";
            
            //selectedMaterial = "";
            // selectedFigure = "";
            // isChecked = false;

            if (isChecked)
            {
                Scene scene = new Scene("model_"+name);
                Material gray = new Material("floor", System.Drawing.Color.White);
                Figure floor = new Figure("floor", 1000);
                Model earth = new Model("earth", floor, gray);
                Coordinate position = new Coordinate(0, -999, 5);
                scene.addPositionedModel(new PositionedModel(earth, position));

                Figure test = new Figure("test", 1);
                Model temp = new Model("object", test, material);
                position = new Coordinate(0, 2, 5);
                scene.addPositionedModel(new PositionedModel(temp, position));

                Render render = new Render(scene,150,100,30,20);
                render.RenderScene(manager.logged.name);
            }
            name = "";


        }
        else
        {
            mensajeError = "figura " + selectedFigure + " material " + selectedMaterial;
        }
    }

    void VerModelo()
    {
        NavigationManager.NavigateTo("/model/list");
    }


}
